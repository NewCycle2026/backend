generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  nickname  String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // ✅ 추가!!

  carbonTransactions CarbonTransaction[]
  esgReports         EsgReport[]
  trips              Trip[]
}

model CarbonTransaction {
  id        Int      @id @default(autoincrement())
  userId    Int
  amount    Int
  type      String // 'SAVE' or 'USE'
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model EsgReport {
  id        Int      @id @default(autoincrement())
  userId    Int
  period    String // 예: '2024-Q1'
  score     Int
  summary   String? // ✅ 마이페이지에서 사용
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

model Trip {
  id              Int      @id @default(autoincrement())
  userId          Int
  title           String
  countryCode     String
  distanceKm      Int?
  publicTransport Boolean  @default(false) // ✅ ESG 계산용
  startDate       DateTime
  endDate         DateTime
  createdAt       DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}

/*
return {
  period: latestEsg.period,
  score: latestEsg.score,
  summary: latestEsg.summary ?? '',              // ✅ null 대응
  grade: this.calculateEsgGrade(latestEsg.score),
  nickname: user?.nickname ?? '',                // ✅ null 대응
  joinedAt: user?.createdAt ?? new Date(),       // ✅ null 대응
};
*/
